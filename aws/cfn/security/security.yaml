AWSTemplateFormatVersion: 2010-09-09

Description: |
  The networking and cluster configuration to support fargate containers
  - ECS Fargate Cluster
  - Application Load Balanacer (ALB)
    - ipv4 only
    - internet facing
    - certificate attached from Amazon Certification Manager (ACM)
  - ALB Security Group
  - HTTPS Listener
    - send app. subdomain and naked domain to frontend Target Group
    - send api. subdomain to backend Target Group
  - HTTP Listener
    - redirects to HTTPS Listener
  - Backend Target Group
  - Frontend Target Group

Parameters:
  # Configured Parameters
  NetworkingStack:
    Type: String
    Description: This is our base layer of networking components (e.g. VPC, subnets)

Resources:
  AlbSg:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}AlbSG"
      GroupDescription: Public Facing SG for our Cruddur ALB
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkingStack}VpcId
      SecurityGroupIngress:
        - IpProtocol: https
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
          Description: INTERNET HTTPS
        - IpProtocol: http
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
          Description: INTERNET HTTP
      SecurityGroupEgress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt BackendServiceSg.GroupId
          FromPort: 
            Fn::ImportValue:
              !Sub ${NetworkingStack}BackendPort
          ToPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}BackendPort
          Description: Backend HTTP
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt FrontendServiceSg.GroupId
          FromPort: 
            Fn::ImportValue:
              !Sub ${NetworkingStack}FrontendPort
          ToPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}FrontendPort
          Description: Frontend HTTP
  BackendServiceSg:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}BackendServSg"
      GroupDescription: Security for Backend Fargate Service for Cruddur
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkingStack}VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AlbSg.GroupId
          FromPort: 
            Fn::ImportValue:
              !Sub ${NetworkingStack}BackendPort
          ToPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}BackendPort
          Description: ALB HTTP
      SecurityGroupEgress:
        - IpProtocol: https
          SourceSecurityGroupId: !GetAtt SsmEndpointSg.GroupId
          FromPort: 443
          ToPort: 443
          Description: SSM Enpoint HTTPS
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt DbSg.GroupId
          FromPort: 
            Fn::ImportValue:
              !Sub ${NetworkingStack}DbPort
          ToPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}DbPort
          Description: DB TCP
  DbSg:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}DbSg"
      GroupDescription: Security for Fargate Services for Cruddur
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkingStack}VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt BackendServiceSg.GroupId
          FromPort: 
            Fn::ImportValue:
              !Sub ${NetworkingStack}DbPort
          ToPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}DbPort
          Description: DB TCP
  FrontendServiceSg:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}FrontendServSg"
      GroupDescription: Security for Frontend Fargate Service for Cruddur
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkingStack}VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AlbSg.GroupId
          FromPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}FrontendPort
          ToPort:
            Fn::ImportValue:
              !Sub ${NetworkingStack}FrontendPort
          Description: ALB HTTP
  LambdaAvatarUrlSg:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}LambdaAvatarUrlSg"
      GroupDescription: Security for Lambda generating presigned urls for S3 avatar uploads
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkingStack}VpcId
      SecurityGroupEngress:
        - IpProtocol: -1  # -1 means all protocols
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
  SsmEndpointSg:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}SsmEndpointSg"
      GroupDescription: Security for SSM Interface Endpoint
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkingStack}VpcId
      SecurityGroupIngress:
        - IpProtocol: https
          SourceSecurityGroupId: !GetAtt BackendServiceSg.GroupId
          FromPort: 443
          ToPort: 443
          Description: Backend HTTPS
        - IpProtocol: https
          SourceSecurityGroupId: !GetAtt LambdaAvatarUrlSg.GroupId
          FromPort: 443
          ToPort: 443
          Description: LambdaAvatarUrl HTTPS

Outputs:
  AlbSecurityGroupId:
    Value: !GetAtt AlbSg.GroupId
    Export:
      Name: !Sub "${AWS::StackName}AlbSecurityGroupId"
  BackendServiceSecurityGroupId:
    Value: !GetAtt BackendServiceSg.GroupId
    Export:
      Name: !Sub "${AWS::StackName}BackendServiceSg"
  FrontendServiceSecurityGroupId:
    Value: !GetAtt FrontendServiceSg.GroupId
    Export:
      Name: !Sub "${AWS::StackName}FrontendServiceSg"
  DbSecurityGroupId:
    Value: !GetAtt DbSg.GroupId
    Export:
      Name: !Sub "${AWS::StackName}DbSg"
  LambdaAvatarUrlSecurityGroupId:
    Value: !GetAtt LambdaAvatarUrlSg.GroupId
    Export:
      Name: !Sub "${AWS::StackName}LambdaAvatarUrlSg"
  SsmEndpointSecurityGroupId:
    Value: !GetAtt SsmEndpointSg.GroupId
    Export:
      Name: !Sub "${AWS::StackName}SsmEndpointSg"